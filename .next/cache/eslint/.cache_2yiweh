[{"E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\api\\hello.js":"1","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\index.js":"2","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\login.js":"3","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\notifications.js":"4","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\profile\\[id]\\[...tab].js":"5","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\profile\\[id].js":"6","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\profile.js":"7","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\saved.js":"8","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\_app.js":"9","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Avatar.js":"10","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Card.js":"11","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Cover.js":"12","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\FriendInfo.js":"13","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Layout.js":"14","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\NavigationCard.js":"15","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\PostCard.js":"16","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\PostFormCard.js":"17","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Preloader.js":"18","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\ProfileContent.js":"19","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\ProfileTabs.js":"20"},{"size":175,"mtime":1701589563582,"results":"21","hashOfConfig":"22"},{"size":1577,"mtime":1701589563583,"results":"23","hashOfConfig":"22"},{"size":4500,"mtime":1701589563583,"results":"24","hashOfConfig":"22"},{"size":1769,"mtime":1701589563583,"results":"25","hashOfConfig":"22"},{"size":114,"mtime":1701589563585,"results":"26","hashOfConfig":"22"},{"size":100,"mtime":1701589563584,"results":"27","hashOfConfig":"22"},{"size":5647,"mtime":1701589563584,"results":"28","hashOfConfig":"22"},{"size":1223,"mtime":1701589563585,"results":"29","hashOfConfig":"22"},{"size":745,"mtime":1701589563582,"results":"30","hashOfConfig":"22"},{"size":2206,"mtime":1701589563573,"results":"31","hashOfConfig":"22"},{"size":255,"mtime":1701589563574,"results":"32","hashOfConfig":"22"},{"size":2199,"mtime":1701589563574,"results":"33","hashOfConfig":"22"},{"size":308,"mtime":1701589563574,"results":"34","hashOfConfig":"22"},{"size":618,"mtime":1701589563574,"results":"35","hashOfConfig":"22"},{"size":4449,"mtime":1701589563575,"results":"36","hashOfConfig":"22"},{"size":13229,"mtime":1701589563576,"results":"37","hashOfConfig":"22"},{"size":5190,"mtime":1701589563576,"results":"38","hashOfConfig":"22"},{"size":166,"mtime":1701589563577,"results":"39","hashOfConfig":"22"},{"size":4667,"mtime":1701591055737,"results":"40","hashOfConfig":"22"},{"size":3228,"mtime":1701589563577,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14oj3n",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\api\\hello.js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\index.js",["109","110"],[],"import Layout from \"../components/Layout\";\r\nimport PostFormCard from \"../components/PostFormCard\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport {useSession, useSupabaseClient} from \"@supabase/auth-helpers-react\";\r\nimport LoginPage from \"./login\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../contexts/UserContext\";\r\n\r\nexport default function Home() {\r\n  const supabase = useSupabaseClient();\r\n  const session = useSession();\r\n  const [posts,setPosts] = useState([]);\r\n  const [profile,setProfile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!session?.user?.id) {\r\n      return;\r\n    }\r\n    supabase.from('profiles')\r\n      .select()\r\n      .eq('id', session.user.id)\r\n      .then(result => {\r\n        if (result.data.length) {\r\n          setProfile(result.data[0]);\r\n        }\r\n      })\r\n  }, [session?.user?.id]);\r\n\r\n  function fetchPosts() {\r\n    supabase.from('posts')\r\n      .select('id, content, created_at, photos, profiles(id, avatar, name)')\r\n      .is('parent', null)\r\n      .order('created_at', {ascending: false})\r\n      .then(result => {\r\n        console.log('posts', result);\r\n        setPosts(result.data);\r\n      })\r\n  }\r\n\r\n  if (!session) {\r\n    return <LoginPage />\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <UserContext.Provider value={{profile}}>\r\n        <PostFormCard onPost={fetchPosts} />\r\n        {posts?.length > 0 && posts.map(post => (\r\n          <PostCard key={post.id} {...post} />\r\n        ))}\r\n      </UserContext.Provider>\r\n    </Layout>\r\n  )\r\n}\r\n","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\login.js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\notifications.js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\profile\\[id]\\[...tab].js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\profile\\[id].js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\profile.js",["111"],[],"import Layout from \"../components/Layout\";\r\nimport Card from \"../components/Card\";\r\nimport Avatar from \"../components/Avatar\";\r\nimport Link from \"next/link\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport {useRouter} from \"next/router\";\r\nimport FriendInfo from \"../components/FriendInfo\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useSession, useSupabaseClient} from \"@supabase/auth-helpers-react\";\r\nimport Cover from \"../components/Cover\";\r\nimport ProfileTabs from \"../components/ProfileTabs\";\r\nimport ProfileContent from \"../components/ProfileContent\";\r\nimport {UserContextProvider} from \"../contexts/UserContext\";\r\n\r\nexport default function ProfilePage() {\r\n  const [profile,setProfile] = useState(null);\r\n  const [editMode,setEditMode] = useState(false);\r\n  const [name,setName] = useState('');\r\n  const [place,setPlace] = useState('');\r\n  const router = useRouter();\r\n  const tab = router?.query?.tab?.[0] || 'posts';\r\n  const session = useSession();\r\n  const userId = router.query.id;\r\n\r\n  const supabase = useSupabaseClient();\r\n\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      return;\r\n    }\r\n    fetchUser();\r\n  }, [userId]);\r\n\r\n  function fetchUser() {\r\n    supabase.from('profiles')\r\n      .select()\r\n      .eq('id', userId)\r\n      .then(result => {\r\n        if (result.error) {\r\n          throw result.error;\r\n        }\r\n        if (result.data) {\r\n          setProfile(result.data[0]);\r\n        }\r\n      });\r\n  }\r\n\r\n  function saveProfile() {\r\n    supabase.from('profiles')\r\n      .update({\r\n        name,\r\n        place,\r\n      })\r\n      .eq('id', session.user.id)\r\n      .then(result => {\r\n        if (!result.error) {\r\n          setProfile(prev => ({...prev,name,place}));\r\n        }\r\n        setEditMode(false);\r\n      });\r\n  }\r\n\r\n\r\n  const isMyUser = userId === session?.user?.id;\r\n\r\n  return (\r\n    <Layout>\r\n      <UserContextProvider>\r\n        <Card noPadding={true}>\r\n          <div className=\"relative overflow-hidden rounded-md\">\r\n            <Cover url={profile?.cover} editable={isMyUser} onChange={fetchUser} />\r\n            <div className=\"absolute top-24 left-4 z-20\">\r\n              {profile && (\r\n                <Avatar url={profile.avatar} size={'lg'} editable={isMyUser} onChange={fetchUser} />\r\n              )}\r\n            </div>\r\n            <div className=\"p-4 pt-0 md:pt-4 pb-0\">\r\n              <div className=\"ml-24 md:ml-40 flex justify-between\">\r\n                <div>\r\n                  {editMode && (\r\n                    <div>\r\n                      <input type=\"text\"\r\n                             className=\"border py-2 px-3 rounded-md\"\r\n                             placeholder={'Your name'}\r\n                             onChange={ev => setName(ev.target.value)}\r\n                             value={name}/>\r\n                    </div>\r\n                  )}\r\n                  {!editMode && (\r\n                    <h1 className=\"text-3xl font-bold\">\r\n                      {profile?.name}\r\n                    </h1>\r\n                  )}\r\n                  {!editMode && (\r\n                    <div className=\"text-gray-500 leading-4\">\r\n                      {profile?.place || 'Internet'}\r\n                    </div>\r\n                  )}\r\n                  {editMode && (\r\n                    <div>\r\n                      <input type=\"text\"\r\n                             className=\"border py-2 px-3 rounded-md mt-1\"\r\n                             placeholder={'Your location'}\r\n                             onChange={ev => setPlace(ev.target.value)}\r\n                             value={place}/>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"grow\">\r\n                  <div className=\"text-right\">\r\n                    {isMyUser && !editMode && (\r\n                      <button\r\n                        onClick={() => {\r\n                          setEditMode(true);\r\n                          setName(profile.name);\r\n                          setPlace(profile.place);\r\n                        }}\r\n                        className=\"inline-flex mx-1 gap-1 bg-white rounded-md shadow-sm shadow-gray-500 py-1 px-2\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\" />\r\n                        </svg>\r\n                        Edit profile\r\n                      </button>\r\n                    )}\r\n                    {isMyUser && editMode && (\r\n                      <button onClick={saveProfile} className=\"inline-flex mx-1 gap-1 bg-white rounded-md shadow-sm shadow-gray-500 py-1 px-2\">\r\n                        Save profile\r\n                      </button>\r\n                    )}\r\n                    {isMyUser && editMode && (\r\n                      <button onClick={() => setEditMode(false)} className=\"inline-flex mx-1 gap-1 bg-white rounded-md shadow-sm shadow-gray-500 py-1 px-2\">\r\n                        Cancel\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <ProfileTabs active={tab} userId={profile?.id} />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        <ProfileContent activeTab={tab} userId={userId} />\r\n      </UserContextProvider>\r\n    </Layout>\r\n  );\r\n}","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\saved.js",["112"],[],"import Layout from \"../components/Layout\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useSession, useSupabaseClient} from \"@supabase/auth-helpers-react\";\r\nimport {UserContextProvider} from \"../contexts/UserContext\";\r\n\r\nexport default function SavedPostsPage() {\r\n  const [posts,setPosts] = useState([]);\r\n  const session = useSession();\r\n  const supabase = useSupabaseClient();\r\n  useEffect(() => {\r\n    if (!session?.user?.id) {\r\n      return;\r\n    }\r\n    supabase\r\n      .from('saved_posts')\r\n      .select('post_id')\r\n      .eq('user_id', session.user.id)\r\n      .then(result => {\r\n        const postsIds = result.data.map(item => item.post_id);\r\n        supabase\r\n          .from('posts')\r\n          .select('*, profiles(*)').in('id', postsIds)\r\n          .then(result => setPosts(result.data));\r\n      });\r\n  }, [session?.user?.id]);\r\n  return (\r\n    <Layout>\r\n      <UserContextProvider>\r\n        <h1 className=\"text-6xl mb-4 text-gray-300\">Saved posts</h1>\r\n        {posts.length > 0 && posts.map(post => (\r\n          <div key={post.id}>\r\n            <PostCard {...post} />\r\n          </div>\r\n        ))}\r\n      </UserContextProvider>\r\n    </Layout>\r\n  );\r\n}","E:\\MY STUDY\\VsCode\\react-social-media-app\\pages\\_app.js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Avatar.js",["113"],[],"import {uploadUserProfileImage} from \"../helpers/user\";\r\nimport {useSession, useSupabaseClient} from \"@supabase/auth-helpers-react\";\r\nimport {useState} from \"react\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nexport default function Avatar({size,url,editable,onChange}) {\r\n  const supabase = useSupabaseClient();\r\n  const session = useSession();\r\n  const [isUploading,setIsUploading] = useState(false);\r\n  async function handleAvatarChange(ev) {\r\n    const file = ev.target.files?.[0];\r\n    if (file) {\r\n      setIsUploading(true);\r\n      await uploadUserProfileImage(supabase, session.user.id, file, 'avatars', 'avatar');\r\n      setIsUploading(false);\r\n      if (onChange) onChange();\r\n    }\r\n  }\r\n  let width = 'w-12';\r\n  if (size === 'lg') {\r\n    width = 'w-24 md:w-36';\r\n  }\r\n  return (\r\n    <div className={`${width} relative`}>\r\n      <div className=\"rounded-full overflow-hidden\">\r\n        <img src={url} alt=\"\" className=\"w-full\"/>\r\n      </div>\r\n      {isUploading && (\r\n        <div className=\"absolute inset-0 flex items-center bg-white bg-opacity-50 rounded-full\">\r\n          <div className=\"inline-block mx-auto\">\r\n            <Preloader />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {editable && (\r\n        <label className=\"absolute bottom-0 right-0 shadow-md shadow-gray-500 p-2 bg-white rounded-full cursor-pointer\">\r\n          <input type=\"file\" className=\"hidden\" onChange={handleAvatarChange}/>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\r\n          </svg>\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n}","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Card.js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Cover.js",["114"],[],"import {useSession, useSupabaseClient} from \"@supabase/auth-helpers-react\";\r\nimport {useState} from \"react\";\r\nimport Preloader from \"./Preloader\";\r\nimport {uploadUserProfileImage} from \"../helpers/user\";\r\n\r\nexport default function Cover({url,editable,onChange}) {\r\n  const supabase = useSupabaseClient();\r\n  const session = useSession();\r\n  const [isUploading,setIsUploading] = useState(false);\r\n\r\n  async function updateCover(ev) {\r\n    const file = ev.target.files?.[0];\r\n    if (file) {\r\n      setIsUploading(true);\r\n      await uploadUserProfileImage(supabase, session.user.id, file, 'covers', 'cover');\r\n      setIsUploading(false);\r\n      if (onChange) onChange();\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"h-36 overflow-hidden flex justify-center items-center relative\">\r\n      <div>\r\n        <img src={url} alt=\"\"/>\r\n      </div>\r\n      {isUploading && (\r\n        <div className=\"absolute inset-0 bg-white bg-opacity-80 flex items-center z-10\">\r\n          <div className=\"inline-block mx-auto\">\r\n            <Preloader />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {editable && (\r\n        <div className=\"absolute right-0 bottom-0 m-2\">\r\n          <label className=\"flex items-center gap-1 bg-white py-1 px-2 rounded-md shadow-md shadow-black cursor-pointer\">\r\n            <input type=\"file\" onChange={updateCover} className=\"hidden\" />\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\r\n            </svg>\r\n            Change cover image\r\n          </label>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\FriendInfo.js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Layout.js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\NavigationCard.js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\PostCard.js",["115","116"],[],"import Avatar from \"./Avatar\";\r\nimport Card from \"./Card\";\r\nimport ClickOutHandler from 'react-clickout-handler'\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport Link from \"next/link\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport {UserContext} from \"../contexts/UserContext\";\r\nimport {useSupabaseClient} from \"@supabase/auth-helpers-react\";\r\n\r\nexport default function PostCard({id,content,created_at,photos,profiles:authorProfile}) {\r\n  const [dropdownOpen,setDropdownOpen] = useState(false);\r\n  const [likes,setLikes] = useState([]);\r\n  const [comments,setComments] = useState([]);\r\n  const [commentText,setCommentText] = useState('');\r\n  const [isSaved,setIsSaved] = useState(false);\r\n  const {profile:myProfile} = useContext(UserContext);\r\n  const supabase = useSupabaseClient();\r\n  useEffect(() => {\r\n    fetchLikes();\r\n    fetchComments();\r\n    if (myProfile?.id) fetchIsSaved();\r\n  }, [myProfile?.id]);\r\n  function fetchIsSaved() {\r\n    supabase\r\n      .from('saved_posts')\r\n      .select()\r\n      .eq('post_id', id)\r\n      .eq('user_id', myProfile?.id)\r\n      .then(result => {\r\n        if (result.data.length > 0) {\r\n          setIsSaved(true);\r\n        } else {\r\n          setIsSaved(false);\r\n        }\r\n      })\r\n  }\r\n  function fetchLikes() {\r\n    supabase.from('likes').select().eq('post_id', id)\r\n      .then(result => setLikes(result.data));\r\n  }\r\n  function fetchComments() {\r\n    supabase.from('posts')\r\n      .select('*, profiles(*)')\r\n      .eq('parent', id)\r\n      .then(result => setComments(result.data));\r\n  }\r\n  function openDropdown(e) {\r\n    e.stopPropagation();\r\n    setDropdownOpen(true);\r\n  }\r\n  function handleClickOutsideDropdown(e) {\r\n    e.stopPropagation();\r\n    setDropdownOpen(false);\r\n  }\r\n  function toggleSave() {\r\n    if (isSaved) {\r\n      supabase.from('saved_posts')\r\n        .delete()\r\n        .eq('post_id', id)\r\n        .eq('user_id', myProfile?.id)\r\n        .then(result => {\r\n          setIsSaved(false);\r\n          setDropdownOpen(false);\r\n        });\r\n    }\r\n    if (!isSaved) {\r\n      supabase.from('saved_posts').insert({\r\n        user_id:myProfile.id,\r\n        post_id:id,\r\n      }).then(result => {\r\n        setIsSaved(true);\r\n        setDropdownOpen(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  const isLikedByMe = !!likes.find(like => like.user_id === myProfile?.id);\r\n\r\n  function toggleLike() {\r\n    if (isLikedByMe) {\r\n      supabase.from('likes').delete()\r\n        .eq('post_id', id)\r\n        .eq('user_id', myProfile.id)\r\n        .then(() => {\r\n          fetchLikes();\r\n        });\r\n      return;\r\n    }\r\n    supabase.from('likes')\r\n      .insert({\r\n        post_id: id,\r\n        user_id: myProfile.id,\r\n      })\r\n      .then(result => {\r\n        fetchLikes();\r\n      })\r\n  }\r\n\r\n  function postComment(ev) {\r\n    ev.preventDefault();\r\n    supabase.from('posts')\r\n      .insert({\r\n        content:commentText,\r\n        author:myProfile.id,\r\n        parent:id,\r\n      })\r\n      .then(result => {\r\n        console.log(result);\r\n        fetchComments();\r\n        setCommentText('');\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <div className=\"flex gap-3\">\r\n        <div>\r\n          <Link href={'/profile'}>\r\n            <span className=\"cursor-pointer\">\r\n              <Avatar url={authorProfile.avatar} />\r\n            </span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"grow\">\r\n          <p>\r\n            <Link href={'/profile/'+authorProfile.id}>\r\n              <span className=\"mr-1 font-semibold cursor-pointer hover:underline\">\r\n                {authorProfile.name}\r\n              </span>\r\n            </Link>\r\n            shared a post\r\n          </p>\r\n          <p className=\"text-gray-500 text-sm\">\r\n            <ReactTimeAgo date={ (new Date(created_at)).getTime() } />\r\n          </p>\r\n        </div>\r\n        <div className=\"relative\">\r\n          <button className=\"text-gray-400\" onClick={openDropdown}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM18.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0z\" />\r\n            </svg>\r\n          </button>\r\n          {dropdownOpen && (\r\n            <div className=\"bg-red w-5 h-5 absolute top-0\"></div>\r\n          )}\r\n          <ClickOutHandler onClickOut={handleClickOutsideDropdown}>\r\n            <div className=\"relative\">\r\n              {dropdownOpen && (\r\n                <div className=\"absolute -right-6 bg-white shadow-md shadow-gray-300 p-3 rounded-sm border border-gray-100 w-52\">\r\n                  <button onClick={toggleSave} className=\"w-full -my-2\">\r\n                    <span className=\"flex -mx-4 hover:shadow-md gap-3 py-2 my-2 hover:bg-socialBlue hover:text-white px-4 rounded-md transition-all hover:scale-110 shadow-gray-300\">\r\n                      {isSaved && (\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 3l1.664 1.664M21 21l-1.5-1.5m-5.485-1.242L12 17.25 4.5 21V8.742m.164-4.078a2.15 2.15 0 011.743-1.342 48.507 48.507 0 0111.186 0c1.1.128 1.907 1.077 1.907 2.185V19.5M4.664 4.664L19.5 19.5\" />\r\n                        </svg>\r\n                      )}\r\n                      {!isSaved && (\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0z\" />\r\n                        </svg>\r\n                      )}\r\n                      {isSaved ? 'Remove from saved' : 'Save post'}\r\n                    </span>\r\n                  </button>\r\n                  <a href=\"\" className=\"flex gap-3 py-2 my-2 hover:bg-socialBlue hover:text-white -mx-4 px-4 rounded-md transition-all hover:scale-110 hover:shadow-md shadow-gray-300\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M3.124 7.5A8.969 8.969 0 015.292 3m13.416 0a8.969 8.969 0 012.168 4.5\" />\r\n                    </svg>\r\n                    Turn notifications</a>\r\n                  <a href=\"\" className=\"flex gap-3 py-2 my-2 hover:bg-socialBlue hover:text-white -mx-4 px-4 rounded-md transition-all hover:scale-110 hover:shadow-md shadow-gray-300\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                    Hide post</a>\r\n                  <a href=\"\" className=\"flex gap-3 py-2 my-2 hover:bg-socialBlue hover:text-white -mx-4 px-4 rounded-md transition-all hover:scale-110 hover:shadow-md shadow-gray-300\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\r\n                    </svg>\r\n                    Delete</a>\r\n                  <a href=\"\" className=\"flex gap-3 py-2 my-2 hover:bg-socialBlue hover:text-white -mx-4 px-4 rounded-md transition-all hover:scale-110 hover:shadow-md shadow-gray-300\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\r\n                    </svg>\r\n                    Report\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </ClickOutHandler>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <p className=\"my-3 text-sm\">{content}</p>\r\n        {photos?.length > 0 && (\r\n          <div className=\"flex gap-4\">\r\n            {photos.map(photo => (\r\n              <div key={photo} className=\"\">\r\n                <img src={photo} className=\"rounded-md\" alt=\"\"/>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"mt-5 flex gap-8\">\r\n        <button className=\"flex gap-2 items-center\" onClick={toggleLike}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className={\"w-6 h-6 \" + (isLikedByMe ? 'fill-red-500' : '')}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z\" />\r\n          </svg>\r\n          {likes?.length}\r\n        </button>\r\n        <button className=\"flex gap-2 items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 12.76c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.076-4.076a1.526 1.526 0 011.037-.443 48.282 48.282 0 005.68-.494c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z\" />\r\n          </svg>\r\n          {comments.length}\r\n        </button>\r\n        <button className=\"flex gap-2 items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M7.217 10.907a2.25 2.25 0 100 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186l9.566-5.314m-9.566 7.5l9.566 5.314m0 0a2.25 2.25 0 103.935 2.186 2.25 2.25 0 00-3.935-2.186zm0-12.814a2.25 2.25 0 103.933-2.185 2.25 2.25 0 00-3.933 2.185z\" />\r\n          </svg>\r\n          4\r\n        </button>\r\n      </div>\r\n      <div className=\"flex mt-4 gap-3\">\r\n        <div>\r\n          <Avatar url={myProfile?.avatar} />\r\n        </div>\r\n        <div className=\"border grow rounded-full relative\">\r\n          <form onSubmit={postComment}>\r\n            <input\r\n              value={commentText}\r\n              onChange={ev => setCommentText(ev.target.value)}\r\n              className=\"block w-full p-3 px-4 overflow-hidden h-12 rounded-full\" placeholder=\"Leave a comment\"/>\r\n          </form>\r\n          <button className=\"absolute top-3 right-3 text-gray-400\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {comments.length > 0 && comments.map(comment => (\r\n          <div key={comment.id} className=\"mt-2 flex gap-2 items-center\">\r\n            <Avatar url={comment.profiles.avatar} />\r\n            <div className=\"bg-gray-200 py-2 px-4 rounded-3xl\">\r\n              <div>\r\n                <Link href={'/profile/'+comment.profiles.id}>\r\n                  <span className=\"hover:underline font-semibold mr-1\">\r\n                    {comment.profiles.name}\r\n                  </span>\r\n                </Link>\r\n                <span className=\"text-sm text-gray-400\">\r\n                  <ReactTimeAgo timeStyle={'twitter'} date={(new Date(comment.created_at)).getTime()} />\r\n                </span>\r\n              </div>\r\n              <p className=\"text-sm\">{comment.content}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Card>\r\n  );\r\n}","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\PostFormCard.js",["117","118"],[],"import Card from \"./Card\";\r\nimport Avatar from \"./Avatar\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {useSession, useSupabaseClient} from \"@supabase/auth-helpers-react\";\r\nimport {UserContext} from \"../contexts/UserContext\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nexport default function PostFormCard({onPost}) {\r\n  const [content,setContent] = useState('');\r\n  const [uploads,setUploads] = useState([]);\r\n  const [isUploading,setIsUploading] = useState(false);\r\n  const supabase = useSupabaseClient();\r\n  const session = useSession();\r\n  const {profile} = useContext(UserContext);\r\n\r\n  function createPost() {\r\n    supabase.from('posts').insert({\r\n      author: session.user.id,\r\n      content,\r\n      photos: uploads,\r\n    }).then(response => {\r\n      if (!response.error) {\r\n        setContent('');\r\n        setUploads([]);\r\n        if (onPost) {\r\n          onPost();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async function addPhotos(ev) {\r\n    const files = ev.target.files;\r\n    if (files.length > 0) {\r\n      setIsUploading(true);\r\n      for (const file of files) {\r\n        const newName = Date.now() + file.name;\r\n        const result = await supabase\r\n          .storage\r\n          .from('photos')\r\n          .upload(newName, file);\r\n        if (result.data) {\r\n          const url = process.env.NEXT_PUBLIC_SUPABASE_URL + '/storage/v1/object/public/photos/' + result.data.path;\r\n          setUploads(prevUploads =>[...prevUploads,url]);\r\n        } else {\r\n          console.log(result);\r\n        }\r\n      }\r\n      setIsUploading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <div className=\"flex gap-2\">\r\n        <div>\r\n          <Avatar url={profile?.avatar} />\r\n        </div>\r\n        {profile && (\r\n          <textarea value={content}\r\n                    onChange={e => setContent(e.target.value)}\r\n                    className=\"grow p-3 h-14\" placeholder={`Whats on your mind, ${profile?.name}?`} />\r\n        )}\r\n      </div>\r\n      {isUploading && (\r\n        <div>\r\n          <Preloader />\r\n        </div>\r\n      )}\r\n      {uploads.length > 0 && (\r\n        <div className=\"flex gap-2\">\r\n          {uploads.map(upload => (\r\n            <div className=\"mt-2\" >\r\n              <img src={upload} alt=\"\" className=\"w-auto h-24 rounded-md\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className=\"flex gap-5 items-center mt-2\">\r\n        <div>\r\n          <label className=\"flex gap-1\">\r\n            <input type=\"file\" className=\"hidden\" multiple onChange={addPhotos} />\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z\" />\r\n            </svg>\r\n            <span className=\"hidden md:block\">Photos</span>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <button className=\"flex gap-1\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z\" />\r\n            </svg>\r\n            <span className=\"hidden md:block\">People</span>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button className=\"flex gap-1\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 10.5a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z\" />\r\n            </svg>\r\n            <span className=\"hidden md:block\">Check in</span>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button className=\"flex gap-1\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.182 15.182a4.5 4.5 0 01-6.364 0M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z\" />\r\n            </svg>\r\n            <span className=\"hidden md:block\">Mood</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"grow text-right\">\r\n          <button onClick={createPost} className=\"bg-socialBlue text-white px-6 py-1 rounded-md\">Share</button>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}","E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\Preloader.js",[],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\ProfileContent.js",["119"],[],"E:\\MY STUDY\\VsCode\\react-social-media-app\\components\\ProfileTabs.js",[],[],{"ruleId":"120","severity":1,"message":"121","line":17,"column":6,"nodeType":"122","endLine":17,"endColumn":8,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":31,"column":6,"nodeType":"122","endLine":31,"endColumn":25,"suggestions":"125"},{"ruleId":"120","severity":1,"message":"126","line":32,"column":6,"nodeType":"122","endLine":32,"endColumn":14,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"124","line":26,"column":6,"nodeType":"122","endLine":26,"endColumn":25,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":26,"column":9,"nodeType":"131","endLine":26,"endColumn":51},{"ruleId":"129","severity":1,"message":"130","line":23,"column":9,"nodeType":"131","endLine":23,"endColumn":32},{"ruleId":"120","severity":1,"message":"132","line":22,"column":6,"nodeType":"122","endLine":22,"endColumn":21,"suggestions":"133"},{"ruleId":"129","severity":1,"message":"130","line":198,"column":17,"nodeType":"131","endLine":198,"endColumn":65},{"ruleId":"134","severity":2,"message":"135","line":73,"column":13,"nodeType":"136","messageId":"137","endLine":75,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":74,"column":15,"nodeType":"131","endLine":74,"endColumn":77},{"ruleId":"120","severity":1,"message":"138","line":19,"column":6,"nodeType":"122","endLine":19,"endColumn":14,"suggestions":"139"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has a missing dependency: 'supabase'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["142"],["143"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has missing dependencies: 'fetchComments', 'fetchIsSaved', and 'fetchLikes'. Either include them or remove the dependency array.",["144"],"react/jsx-key","Missing \"key\" prop for element in iterator","JSXElement","missingIterKey","React Hook useEffect has missing dependencies: 'activeTab' and 'loadPosts'. Either include them or remove the dependency array.",["145"],{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"148","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [fetchPosts]",{"range":"157","text":"158"},"Update the dependencies array to be: [session.user.id, supabase]",{"range":"159","text":"160"},"Update the dependencies array to be: [fetchUser, userId]",{"range":"161","text":"162"},{"range":"163","text":"160"},"Update the dependencies array to be: [fetchComments, fetchIsSaved, fetchLikes, myProfile?.id]",{"range":"164","text":"165"},"Update the dependencies array to be: [activeTab, loadPosts, userId]",{"range":"166","text":"167"},[604,606],"[fetchPosts]",[893,912],"[session.user.id, supabase]",[1143,1151],"[fetchUser, userId]",[875,894],[913,928],"[fetchComments, fetchIsSaved, fetchLikes, myProfile?.id]",[586,594],"[activeTab, loadPosts, userId]"]